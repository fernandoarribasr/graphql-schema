type OrganizationData implements GroupCommonData {
  id: ID!
  code: ID!
  label: String
  type: GroupType!
  info: String
  crmID: String
  # Only responses folders.(non-hierarchically)
  children(
    codes: [ID!]
    first: Int
    last: Int
    before: String
    after: String
    type: GroupType
    codeStartsWith: String
  ): GroupConnection
  # Response all descendents groups nodes in this group (nom-hierarchically)
  descendents(
    codes: [ID!]
    type: GroupType
    first: Int
    last: Int
    before: String
    after: String
    codeStartsWith: String
  ): GroupConnection
  # Response all parents groups nodes for this group (nom-hierarchically)
  parents(
    codes: [ID!]
    type: GroupType
    first: Int
    last: Int
    before: String
    after: String
  ): GroupConnection
  owner: Member!
  #Differents contacts in a organization.
  contacts: [OrganizationContact!]
  isEditable: Boolean!
  members(
    codes: [ID!]
    type: MemberType
    first: Int
    last: Int
    before: String
    after: String
  ): MemberConnection
  # APIs assigned to this group. Products have APIs.
  apis(
    codes: [ID!]
    first: Int
    last: Int
    before: String
    after: String
  ): APIConnection
  # Products asign to a organization
  products(
    codes: [ID!]
    first: Int
    last: Int
    before: String
    after: String
  ): ProductConnection
  # Response all members in this group's childrens (hierarchically)
  allMembers(
    codes: [ID!]
    type: MemberType
    first: Int
    last: Int
    before: String
    after: String
  ): MemberConnection
  # Access resources in a group
  accesses(
    accessID: [ID!]
    owner: [ID!]
    first: Int
    last: Int
    before: String
    after: String
  ): AccessConnection
  # Supplier resources in a group
  suppliers(
    supplierID: [ID!]
    accessID: [ID!]
    owner: [ID!]
    serviceAPI: [ID!]
    isActive: Boolean
    first: Int
    last: Int
    before: String
    after: String
  ): SupplierConnection
  # Clients resources in a group
  clients(
    clientID: [ID!]
    name: [ID!]
    owner: [ID!]
    isActive: Boolean
    first: Int
    last: Int
    before: String
    after: String
  ): ClientConnection
  # Obtain all profiles
  profiles(
    codes: [ID!]
    first: Int
    last: Int
    before: String
    after: String
  ): ProfileConnection
  domains: [Domain]!
  template: String
  # ISO 3166-1 alpha-2 format country code with enclosing double quotes "ES"
  country: Country!
  # Access resources in this organization
  allAccesses: AccessConnection
  # Supplier resources in this organization
  allSuppliers: SupplierConnection
  # Clients resources in this organization
  allClients: ClientConnection
  # Profiles resources in this organization
  allProfiles: ProfileConnection
  primaryPartner: Partner!
  allPartners(
    where: PartnerWhereInput
    orderBy: PartnerOrderByInput
    relay: RelayInput
  ): PartnerConnection!
  isBuyer: Boolean!
  isSeller: Boolean!
}
